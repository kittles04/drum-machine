[{"/Users/kwalker/Desktop/drum-machine/src/index.js":"1","/Users/kwalker/Desktop/drum-machine/src/App.js":"2","/Users/kwalker/Desktop/drum-machine/src/components/Container.js":"3","/Users/kwalker/Desktop/drum-machine/src/components/Drumpad.js":"4","/Users/kwalker/Desktop/drum-machine/src/components/Controls.js":"5"},{"size":500,"mtime":1606662742429,"results":"6","hashOfConfig":"7"},{"size":189,"mtime":1606693186673,"results":"8","hashOfConfig":"7"},{"size":1093,"mtime":1606779026864,"results":"9","hashOfConfig":"7"},{"size":3590,"mtime":1606778371241,"results":"10","hashOfConfig":"7"},{"size":430,"mtime":1606761396507,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"s6jxev",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kwalker/Desktop/drum-machine/src/index.js",[],"/Users/kwalker/Desktop/drum-machine/src/App.js",[],"/Users/kwalker/Desktop/drum-machine/src/components/Container.js",["23"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Drumpad from \"./Drumpad\";\nimport Controls from \"./Controls\";\nimport { useState } from \"react\";\n\nlet names = {\n  Q: \"heater1\",\n  W: \"heater2\",\n  E: \"heater3\",\n  A: \"heater4\",\n  S: \"dsc-oh\",\n  D: \"kick-n-hat\",\n  Z: \"cev-h2\",\n  X: \"chord_1\",\n  C: \"dry-ohh\",\n};\n\nconst Container = (props) => {\n  const [display, updateDisplay] = useState(\"\");\n  const [key, updateKey] = useState(\"\");\n\n  const handleDisplay = (key) => {\n    updateDisplay(names[key]);\n  };\n\n  const handleSound = (key) => {\n    let sound = document.getElementById(key);\n    sound.play();\n  };\n\n  const handleKey = (e) => {\n    let audioId = e.target.firstChild.id || e.key.toUpperCase();\n    let name = e.target.value || e.key.toUpperCase();\n    console.log(audioId);\n    updateKey(key);\n    handleDisplay(name);\n    handleSound(audioId);\n  };\n  return (\n    <div id={\"drum-machine\"}>\n      <Drumpad handleKey={handleKey} handleSound={handleSound} />\n      <Controls display={display} />\n    </div>\n  );\n};\n\nContainer.propTypes = {};\n\nexport default Container;\n","/Users/kwalker/Desktop/drum-machine/src/components/Drumpad.js",["24"],"/Users/kwalker/Desktop/drum-machine/src/components/Controls.js",[],{"ruleId":"25","severity":1,"message":"26","line":2,"column":8,"nodeType":"27","messageId":"28","endLine":2,"endColumn":17},{"ruleId":"29","severity":1,"message":"30","line":15,"column":6,"nodeType":"31","endLine":15,"endColumn":8,"suggestions":"32"},"no-unused-vars","'PropTypes' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleKey'. Either include it or remove the dependency array. If 'handleKey' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["33"],{"desc":"34","fix":"35"},"Update the dependencies array to be: [handleKey]",{"range":"36","text":"37"},[352,354],"[handleKey]"]